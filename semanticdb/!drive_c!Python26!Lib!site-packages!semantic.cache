;; Object site-packages/
;; SEMANTICDB Tags save file
(semanticdb-project-database-file "site-packages/"
  :tables (list 
   (semanticdb-table "usercustomize.py"
    :major-mode 'python-mode
    :tags 
        '( ("sys" include nil nil [1 11])
            ("sys" code nil nil [12 80])
            ("ppm" include nil nil [81 91]))          
    :file "usercustomize.py"
    :pointmax 92
    :fsize 94
    :lastmodtime '(20868 46838)
    :unmatched-syntax '((IMPORT 81 . 87) ($EOI 91 . 91) ($EOI 93 . 93))
    )
   (semanticdb-table "path.py"
    :major-mode 'python-mode
    :tags 
        '( ("""" path.py - An object representing a path to a file or directory.

Original author:
 Jason Orendorff <jason.orendorff\x40gmail\x2ecom>

Contributors:
 Mikhail Gusarov <dottedmag@dottedmag.net>
 Marc Abramowitz <marc@marc-abramowitz.com>
 Jason R. Coombs <jaraco@jaraco.com>
 Jason Chu <jchu@xentac.net>
 Vojislav Stojkovic <vstojkovic@syntertainment.com>

Example:

from path import path
d = path('/home/guido/bin')
for f in d.files('*.py'):
    f.chmod(0755)

path.py requires Python 2.5 or later.
"""" code nil nil [1100 1604])
            ("__future__" include nil nil [1606 1643])
            ("sys" include nil nil [1645 1655])
            ("warnings" include nil nil [1656 1671])
            ("os" include nil nil [1672 1681])
            ("fnmatch" include nil nil [1682 1696])
            ("glob" include nil nil [1697 1708])
            ("shutil" include nil nil [1709 1722])
            ("codecs" include nil nil [1723 1736])
            ("hashlib" include nil nil [1737 1751])
            ("errno" include nil nil [1752 1764])
            ("tempfile" include nil nil [1765 1780])
            ("functools" include nil nil [1781 1797])
            ("try" code nil nil [1799 1858])
            ("try" code nil nil [1859 1908])
            ("__version__" variable nil nil [1909 1928])
            ("__all__" variable nil nil [1929 1947])
            ("TreeWalkWarning" type
               (:superclasses ("Warning")
                :members 
                  ( ("pass" code nil (reparse-symbol indented_block_body) [1985 1989]))                  
                :type "class")
                nil [1949 1990])
            ("simple_cache" function (:arguments 
              ( ("func" variable nil (reparse-symbol function_parameters) [2008 2012]))              ) nil [1991 2387])
            ("ClassProperty" type
               (:superclasses ("property")
                :members 
                  ( ("__get__" function (:arguments 
                      ( ("self" variable nil (reparse-symbol function_parameters) [2435 2439])
                        ("cls" variable nil (reparse-symbol function_parameters) [2441 2444])
                        ("owner" variable nil (reparse-symbol function_parameters) [2446 2451]))                      ) (reparse-symbol indented_block_body) [2423 2502]))                  
                :type "class")
                nil [2388 2502])
            ("multimethod" type
               (:superclasses ("object")
                :members 
                  ( (""""
    Acts like a classmethod when invoked from the class and like an
    instancemethod when invoked from the instance.
    """" code nil (reparse-symbol indented_block_body) [2534 2664])
                    ("__init__" function (:arguments 
                      ( ("self" variable nil (reparse-symbol function_parameters) [2682 2686])
                        ("func" variable nil (reparse-symbol function_parameters) [2688 2692]))                      ) (reparse-symbol indented_block_body) [2669 2720])
                    ("__get__" function (:arguments 
                      ( ("self" variable nil (reparse-symbol function_parameters) [2737 2741])
                        ("instance" variable nil (reparse-symbol function_parameters) [2743 2751])
                        ("owner" variable nil (reparse-symbol function_parameters) [2753 2758]))                      ) (reparse-symbol indented_block_body) [2725 2919]))                  
                :type "class")
                nil [2503 2919])
            ("path" type
               (:superclasses ("unicode")
                :members 
                  ( ("""" Represents a filesystem path.

    For documentation on individual methods, consult their
    counterparts in os.path.
    """" code nil (reparse-symbol indented_block_body) [2945 3075])
                    ("__init__" function (:arguments 
                      ( ("self" variable nil (reparse-symbol function_parameters) [3094 3098])
                        ("other" variable nil (reparse-symbol function_parameters) [3100 3105]))                      ) (reparse-symbol indented_block_body) [3081 3255])
                    ("module" variable nil (reparse-symbol indented_block_body) [3260 3276])
                    (""The path module to use for path operations."" code nil (reparse-symbol indented_block_body) [3281 3326])
                    ("classmethod" code nil (reparse-symbol indented_block_body) [3333 3344])
                    ("simple_cache" code nil (reparse-symbol indented_block_body) [3350 3362])
                    ("using_module" function (:arguments 
                      ( ("cls" variable nil (reparse-symbol function_parameters) [3384 3387])
                        ("module" variable nil (reparse-symbol function_parameters) [3389 3395]))                      ) (reparse-symbol indented_block_body) [3367 3560])
                    ("ClassProperty" code nil (reparse-symbol indented_block_body) [3566 3579])
                    ("classmethod" code nil (reparse-symbol indented_block_body) [3585 3596])
                    ("_next_class" function (:arguments 
                      ( ("cls" variable nil (reparse-symbol function_parameters) [3617 3620]))                      ) (reparse-symbol indented_block_body) [3601 3743])
                    ("__repr__" function (:arguments 
                      ( ("self" variable nil (reparse-symbol function_parameters) [3796 3800]))                      ) (reparse-symbol indented_block_body) [3783 3881])
                    ("__add__" function (:arguments 
                      ( ("self" variable nil (reparse-symbol function_parameters) [3946 3950])
                        ("more" variable nil (reparse-symbol function_parameters) [3952 3956]))                      ) (reparse-symbol indented_block_body) [3934 4115])
                    ("__radd__" function (:arguments 
                      ( ("self" variable nil (reparse-symbol function_parameters) [4133 4137])
                        ("other" variable nil (reparse-symbol function_parameters) [4139 4144]))                      ) (reparse-symbol indented_block_body) [4120 4280])
                    ("__div__" function (:arguments 
                      ( ("self" variable nil (reparse-symbol function_parameters) [4331 4335])
                        ("rel" variable nil (reparse-symbol function_parameters) [4337 4340]))                      ) (reparse-symbol indented_block_body) [4319 4559])
                    ("__truediv__" variable nil (reparse-symbol indented_block_body) [4631 4652])
                    ("__enter__" function (:arguments 
                      ( ("self" variable nil (reparse-symbol function_parameters) [4672 4676]))                      ) (reparse-symbol indented_block_body) [4658 4740])
                    ("__exit__" function (:arguments 
                      ( ("self" variable nil (reparse-symbol function_parameters) [4758 4762])
                        ("_" variable nil (reparse-symbol function_parameters) [4764 4766]))                      ) (reparse-symbol indented_block_body) [4745 4801])
                    ("classmethod" code nil (reparse-symbol indented_block_body) [4807 4818])
                    ("getcwd" function (:arguments 
                      ( ("cls" variable nil (reparse-symbol function_parameters) [4834 4837]))                      ) (reparse-symbol indented_block_body) [4823 4944])
                    ("abspath" function (:arguments 
                      ( ("self" variable nil (reparse-symbol function_parameters) [5006 5010]))                      ) (reparse-symbol indented_block_body) [4994 5072])
                    ("normcase" function (:arguments 
                      ( ("self" variable nil (reparse-symbol function_parameters) [5090 5094]))                      ) (reparse-symbol indented_block_body) [5077 5157])
                    ("normpath" function (:arguments 
                      ( ("self" variable nil (reparse-symbol function_parameters) [5175 5179]))                      ) (reparse-symbol indented_block_body) [5162 5242])
                    ("realpath" function (:arguments 
                      ( ("self" variable nil (reparse-symbol function_parameters) [5260 5264]))                      ) (reparse-symbol indented_block_body) [5247 5327])
                    ("expanduser" function (:arguments 
                      ( ("self" variable nil (reparse-symbol function_parameters) [5347 5351]))                      ) (reparse-symbol indented_block_body) [5332 5416])
                    ("expandvars" function (:arguments 
                      ( ("self" variable nil (reparse-symbol function_parameters) [5436 5440]))                      ) (reparse-symbol indented_block_body) [5421 5505])
                    ("dirname" function (:arguments 
                      ( ("self" variable nil (reparse-symbol function_parameters) [5522 5526]))                      ) (reparse-symbol indented_block_body) [5510 5588])
                    ("basename" function (:arguments 
                      ( ("self" variable nil (reparse-symbol function_parameters) [5606 5610]))                      ) (reparse-symbol indented_block_body) [5593 5673])
                    ("expand" function (:arguments 
                      ( ("self" variable nil (reparse-symbol function_parameters) [5689 5693]))                      ) (reparse-symbol indented_block_body) [5678 5986])
                    ("_get_namebase" function (:arguments 
                      ( ("self" variable nil (reparse-symbol function_parameters) [6009 6013]))                      ) (reparse-symbol indented_block_body) [5991 6088])
                    ("_get_ext" function (:arguments 
                      ( ("self" variable nil (reparse-symbol function_parameters) [6106 6110]))                      ) (reparse-symbol indented_block_body) [6093 6176])
                    ("_get_drive" function (:arguments 
                      ( ("self" variable nil (reparse-symbol function_parameters) [6196 6200]))                      ) (reparse-symbol indented_block_body) [6181 6290])
                    ("parent" variable nil (reparse-symbol indented_block_body) [6295 6510])
                    ("name" variable nil (reparse-symbol indented_block_body) [6516 6726])
                    ("namebase" variable nil (reparse-symbol indented_block_body) [6732 7042])
                    ("ext" variable nil (reparse-symbol indented_block_body) [7048 7149])
                    ("drive" variable nil (reparse-symbol indented_block_body) [7155 7341])
                    ("splitpath" function (:arguments 
                      ( ("self" variable nil (reparse-symbol function_parameters) [7361 7365]))                      ) (reparse-symbol indented_block_body) [7347 7523])
                    ("splitdrive" function (:arguments 
                      ( ("self" variable nil (reparse-symbol function_parameters) [7543 7547]))                      ) (reparse-symbol indented_block_body) [7528 7918])
                    ("splitext" function (:arguments 
                      ( ("self" variable nil (reparse-symbol function_parameters) [7936 7940]))                      ) (reparse-symbol indented_block_body) [7923 8396])
                    ("stripext" function (:arguments 
                      ( ("self" variable nil (reparse-symbol function_parameters) [8414 8418]))                      ) (reparse-symbol indented_block_body) [8401 8651])
                    ("splitunc" function (:arguments 
                      ( ("self" variable nil (reparse-symbol function_parameters) [8669 8673]))                      ) (reparse-symbol indented_block_body) [8656 8766])
                    ("property" code nil (reparse-symbol indented_block_body) [8772 8780])
                    ("uncshare" function (:arguments 
                      ( ("self" variable nil (reparse-symbol function_parameters) [8798 8802]))                      ) (reparse-symbol indented_block_body) [8785 9002])
                    ("multimethod" code nil (reparse-symbol indented_block_body) [9008 9019])
                    ("joinpath" function (:arguments 
                      ( ("cls" variable nil (reparse-symbol function_parameters) [9037 9040])
                        ("first" variable nil (reparse-symbol function_parameters) [9042 9047])
                        ("others" variable nil (reparse-symbol function_parameters) [9049 9056]))                      ) (reparse-symbol indented_block_body) [9024 9394])
                    ("splitall" function (:arguments 
                      ( ("self" variable nil (reparse-symbol function_parameters) [9412 9416]))                      ) (reparse-symbol indented_block_body) [9399 10113])
                    ("relpath" function (:arguments 
                      ( ("self" variable nil (reparse-symbol function_parameters) [10130 10134]))                      ) (reparse-symbol indented_block_body) [10118 10327])
                    ("relpathto" function (:arguments 
                      ( ("self" variable nil (reparse-symbol function_parameters) [10346 10350])
                        ("dest" variable nil (reparse-symbol function_parameters) [10352 10356]))                      ) (reparse-symbol indented_block_body) [10332 11735])
                    ("listdir" function (:arguments 
                      ( ("self" variable nil (reparse-symbol function_parameters) [11805 11809])
                        ("pattern" variable nil (reparse-symbol function_parameters) [11811 11818]))                      ) (reparse-symbol indented_block_body) [11793 12340])
                    ("dirs" function (:arguments 
                      ( ("self" variable nil (reparse-symbol function_parameters) [12354 12358])
                        ("pattern" variable nil (reparse-symbol function_parameters) [12360 12367]))                      ) (reparse-symbol indented_block_body) [12345 12820])
                    ("files" function (:arguments 
                      ( ("self" variable nil (reparse-symbol function_parameters) [12835 12839])
                        ("pattern" variable nil (reparse-symbol function_parameters) [12841 12848]))                      ) (reparse-symbol indented_block_body) [12825 13270])
                    ("walk" function (:arguments 
                      ( ("self" variable nil (reparse-symbol function_parameters) [13284 13288])
                        ("pattern" variable nil (reparse-symbol function_parameters) [13290 13297])
                        ("errors" variable nil (reparse-symbol function_parameters) [13304 13310]))                      ) (reparse-symbol indented_block_body) [13275 15153])
                    ("walkdirs" function (:arguments 
                      ( ("self" variable nil (reparse-symbol function_parameters) [15171 15175])
                        ("pattern" variable nil (reparse-symbol function_parameters) [15177 15184])
                        ("errors" variable nil (reparse-symbol function_parameters) [15191 15197]))                      ) (reparse-symbol indented_block_body) [15158 16485])
                    ("walkfiles" function (:arguments 
                      ( ("self" variable nil (reparse-symbol function_parameters) [16504 16508])
                        ("pattern" variable nil (reparse-symbol function_parameters) [16510 16517])
                        ("errors" variable nil (reparse-symbol function_parameters) [16524 16530]))                      ) (reparse-symbol indented_block_body) [16490 18109])
                    ("fnmatch" function (:arguments 
                      ( ("self" variable nil (reparse-symbol function_parameters) [18126 18130])
                        ("pattern" variable nil (reparse-symbol function_parameters) [18132 18139]))                      ) (reparse-symbol indented_block_body) [18114 18355])
                    ("glob" function (:arguments 
                      ( ("self" variable nil (reparse-symbol function_parameters) [18369 18373])
                        ("pattern" variable nil (reparse-symbol function_parameters) [18375 18382]))                      ) (reparse-symbol indented_block_body) [18360 18753])
                    ("open" function (:arguments 
                      ( ("self" variable nil (reparse-symbol function_parameters) [18827 18831])
                        ("mode" variable nil (reparse-symbol function_parameters) [18833 18837]))                      ) (reparse-symbol indented_block_body) [18818 18931])
                    ("bytes" function (:arguments 
                      ( ("self" variable nil (reparse-symbol function_parameters) [18946 18950]))                      ) (reparse-symbol indented_block_body) [18936 19089])
                    ("write_bytes" function (:arguments 
                      ( ("self" variable nil (reparse-symbol function_parameters) [19110 19114])
                        ("bytes" variable nil (reparse-symbol function_parameters) [19116 19121])
                        ("append" variable nil (reparse-symbol function_parameters) [19123 19129]))                      ) (reparse-symbol indented_block_body) [19094 19480])
                    ("text" function (:arguments 
                      ( ("self" variable nil (reparse-symbol function_parameters) [19494 19498])
                        ("encoding" variable nil (reparse-symbol function_parameters) [19500 19508])
                        ("errors" variable nil (reparse-symbol function_parameters) [19515 19521]))                      ) (reparse-symbol indented_block_body) [19485 20695])
                    ("write_text" function (:arguments 
                      ( ("self" variable nil (reparse-symbol function_parameters) [20715 20719])
                        ("text" variable nil (reparse-symbol function_parameters) [20721 20725])
                        ("encoding" variable nil (reparse-symbol function_parameters) [20727 20735])
                        ("errors" variable nil (reparse-symbol function_parameters) [20742 20748])
                        ("linesep" variable nil (reparse-symbol function_parameters) [20759 20766])
                        ("append" variable nil (reparse-symbol function_parameters) [20779 20785]))                      ) (reparse-symbol indented_block_body) [20700 24334])
                    ("lines" function (:arguments 
                      ( ("self" variable nil (reparse-symbol function_parameters) [24349 24353])
                        ("encoding" variable nil (reparse-symbol function_parameters) [24355 24363])
                        ("errors" variable nil (reparse-symbol function_parameters) [24370 24376])
                        ("retain" variable nil (reparse-symbol function_parameters) [24387 24393]))                      ) (reparse-symbol indented_block_body) [24339 25374])
                    ("write_lines" function (:arguments 
                      ( ("self" variable nil (reparse-symbol function_parameters) [25395 25399])
                        ("lines" variable nil (reparse-symbol function_parameters) [25401 25406])
                        ("encoding" variable nil (reparse-symbol function_parameters) [25408 25416])
                        ("errors" variable nil (reparse-symbol function_parameters) [25423 25429])
                        ("linesep" variable nil (reparse-symbol function_parameters) [25460 25467])
                        ("append" variable nil (reparse-symbol function_parameters) [25480 25486]))                      ) (reparse-symbol indented_block_body) [25379 28061])
                    ("read_md5" function (:arguments 
                      ( ("self" variable nil (reparse-symbol function_parameters) [28079 28083]))                      ) (reparse-symbol indented_block_body) [28066 28230])
                    ("_hash" function (:arguments 
                      ( ("self" variable nil (reparse-symbol function_parameters) [28245 28249])
                        ("hash_name" variable nil (reparse-symbol function_parameters) [28251 28260]))                      ) (reparse-symbol indented_block_body) [28235 28495])
                    ("read_hash" function (:arguments 
                      ( ("self" variable nil (reparse-symbol function_parameters) [28514 28518])
                        ("hash_name" variable nil (reparse-symbol function_parameters) [28520 28529]))                      ) (reparse-symbol indented_block_body) [28500 28746])
                    ("read_hexhash" function (:arguments 
                      ( ("self" variable nil (reparse-symbol function_parameters) [28768 28772])
                        ("hash_name" variable nil (reparse-symbol function_parameters) [28774 28783]))                      ) (reparse-symbol indented_block_body) [28751 29024])
                    ("isabs" function (:arguments 
                      ( ("self" variable nil (reparse-symbol function_parameters) [29309 29313]))                      ) (reparse-symbol indented_block_body) [29299 29347])
                    ("exists" function (:arguments 
                      ( ("self" variable nil (reparse-symbol function_parameters) [29362 29366]))                      ) (reparse-symbol indented_block_body) [29351 29401])
                    ("isdir" function (:arguments 
                      ( ("self" variable nil (reparse-symbol function_parameters) [29415 29419]))                      ) (reparse-symbol indented_block_body) [29405 29453])
                    ("isfile" function (:arguments 
                      ( ("self" variable nil (reparse-symbol function_parameters) [29468 29472]))                      ) (reparse-symbol indented_block_body) [29457 29507])
                    ("islink" function (:arguments 
                      ( ("self" variable nil (reparse-symbol function_parameters) [29522 29526]))                      ) (reparse-symbol indented_block_body) [29511 29561])
                    ("ismount" function (:arguments 
                      ( ("self" variable nil (reparse-symbol function_parameters) [29577 29581]))                      ) (reparse-symbol indented_block_body) [29565 29617])
                    ("samefile" function (:arguments 
                      ( ("self" variable nil (reparse-symbol function_parameters) [29635 29639]))                      ) (reparse-symbol indented_block_body) [29622 29676])
                    ("getatime" function (:arguments 
                      ( ("self" variable nil (reparse-symbol function_parameters) [29694 29698]))                      ) (reparse-symbol indented_block_body) [29681 29735])
                    ("atime" variable nil (reparse-symbol indented_block_body) [29739 29833])
                    ("getmtime" function (:arguments 
                      ( ("self" variable nil (reparse-symbol function_parameters) [29852 29856]))                      ) (reparse-symbol indented_block_body) [29839 29893])
                    ("mtime" variable nil (reparse-symbol indented_block_body) [29897 29993])
                    ("getctime" function (:arguments 
                      ( ("self" variable nil (reparse-symbol function_parameters) [30012 30016]))                      ) (reparse-symbol indented_block_body) [29999 30053])
                    ("ctime" variable nil (reparse-symbol indented_block_body) [30057 30148])
                    ("getsize" function (:arguments 
                      ( ("self" variable nil (reparse-symbol function_parameters) [30166 30170]))                      ) (reparse-symbol indented_block_body) [30154 30206])
                    ("size" variable nil (reparse-symbol indented_block_body) [30210 30300])
                    ("if" code nil (reparse-symbol indented_block_body) [30306 30566])
                    ("stat" function (:arguments 
                      ( ("self" variable nil (reparse-symbol function_parameters) [30580 30584]))                      ) (reparse-symbol indented_block_body) [30571 30675])
                    ("lstat" function (:arguments 
                      ( ("self" variable nil (reparse-symbol function_parameters) [30690 30694]))                      ) (reparse-symbol indented_block_body) [30680 30795])
                    ("__get_owner_windows" function (:arguments 
                      ( ("self" variable nil (reparse-symbol function_parameters) [30824 30828]))                      ) (reparse-symbol indented_block_body) [30800 31296])
                    ("__get_owner_unix" function (:arguments 
                      ( ("self" variable nil (reparse-symbol function_parameters) [31322 31326]))                      ) (reparse-symbol indented_block_body) [31301 31520])
                    ("__get_owner_not_implemented" function (:arguments 
                      ( ("self" variable nil (reparse-symbol function_parameters) [31557 31561]))                      ) (reparse-symbol indented_block_body) [31525 31643])
                    ("if" code nil (reparse-symbol indented_block_body) [31648 31845])
                    ("owner" variable nil (reparse-symbol indented_block_body) [31850 31960])
                    ("if" code nil (reparse-symbol indented_block_body) [31966 32122])
                    ("if" code nil (reparse-symbol indented_block_body) [32127 32232])
                    ("utime" function (:arguments 
                      ( ("self" variable nil (reparse-symbol function_parameters) [32310 32314])
                        ("times" variable nil (reparse-symbol function_parameters) [32316 32321]))                      ) (reparse-symbol indented_block_body) [32300 32438])
                    ("chmod" function (:arguments 
                      ( ("self" variable nil (reparse-symbol function_parameters) [32453 32457])
                        ("mode" variable nil (reparse-symbol function_parameters) [32459 32463]))                      ) (reparse-symbol indented_block_body) [32443 32515])
                    ("if" code nil (reparse-symbol indented_block_body) [32520 32641])
                    ("rename" function (:arguments 
                      ( ("self" variable nil (reparse-symbol function_parameters) [32657 32661])
                        ("new" variable nil (reparse-symbol function_parameters) [32663 32666]))                      ) (reparse-symbol indented_block_body) [32646 32735])
                    ("renames" function (:arguments 
                      ( ("self" variable nil (reparse-symbol function_parameters) [32752 32756])
                        ("new" variable nil (reparse-symbol function_parameters) [32758 32761]))                      ) (reparse-symbol indented_block_body) [32740 32831])
                    ("mkdir" function (:arguments 
                      ( ("self" variable nil (reparse-symbol function_parameters) [32903 32907])
                        ("mode" variable nil (reparse-symbol function_parameters) [32909 32913]))                      ) (reparse-symbol indented_block_body) [32893 32970])
                    ("mkdir_p" function (:arguments 
                      ( ("self" variable nil (reparse-symbol function_parameters) [32987 32991])
                        ("mode" variable nil (reparse-symbol function_parameters) [32993 32997]))                      ) (reparse-symbol indented_block_body) [32975 33156])
                    ("makedirs" function (:arguments 
                      ( ("self" variable nil (reparse-symbol function_parameters) [33174 33178])
                        ("mode" variable nil (reparse-symbol function_parameters) [33180 33184]))                      ) (reparse-symbol indented_block_body) [33161 33244])
                    ("makedirs_p" function (:arguments 
                      ( ("self" variable nil (reparse-symbol function_parameters) [33264 33268])
                        ("mode" variable nil (reparse-symbol function_parameters) [33270 33274]))                      ) (reparse-symbol indented_block_body) [33249 33436])
                    ("rmdir" function (:arguments 
                      ( ("self" variable nil (reparse-symbol function_parameters) [33451 33455]))                      ) (reparse-symbol indented_block_body) [33441 33501])
                    ("rmdir_p" function (:arguments 
                      ( ("self" variable nil (reparse-symbol function_parameters) [33518 33522]))                      ) (reparse-symbol indented_block_body) [33506 33703])
                    ("removedirs" function (:arguments 
                      ( ("self" variable nil (reparse-symbol function_parameters) [33723 33727]))                      ) (reparse-symbol indented_block_body) [33708 33778])
                    ("removedirs_p" function (:arguments 
                      ( ("self" variable nil (reparse-symbol function_parameters) [33800 33804]))                      ) (reparse-symbol indented_block_body) [33783 33990])
                    ("touch" function (:arguments 
                      ( ("self" variable nil (reparse-symbol function_parameters) [34046 34050]))                      ) (reparse-symbol indented_block_body) [34036 34316])
                    ("remove" function (:arguments 
                      ( ("self" variable nil (reparse-symbol function_parameters) [34332 34336]))                      ) (reparse-symbol indented_block_body) [34321 34383])
                    ("remove_p" function (:arguments 
                      ( ("self" variable nil (reparse-symbol function_parameters) [34401 34405]))                      ) (reparse-symbol indented_block_body) [34388 34556])
                    ("unlink" function (:arguments 
                      ( ("self" variable nil (reparse-symbol function_parameters) [34572 34576]))                      ) (reparse-symbol indented_block_body) [34561 34623])
                    ("unlink_p" function (:arguments 
                      ( ("self" variable nil (reparse-symbol function_parameters) [34641 34645]))                      ) (reparse-symbol indented_block_body) [34628 34692])
                    ("if" code nil (reparse-symbol indented_block_body) [34714 34927])
                    ("if" code nil (reparse-symbol indented_block_body) [34932 35150])
                    ("if" code nil (reparse-symbol indented_block_body) [35155 35733])
                    ("copyfile" variable nil (reparse-symbol indented_block_body) [35788 35814])
                    ("copymode" variable nil (reparse-symbol indented_block_body) [35819 35845])
                    ("copystat" variable nil (reparse-symbol indented_block_body) [35850 35876])
                    ("copy" variable nil (reparse-symbol indented_block_body) [35881 35899])
                    ("copy2" variable nil (reparse-symbol indented_block_body) [35904 35924])
                    ("copytree" variable nil (reparse-symbol indented_block_body) [35929 35955])
                    ("if" code nil (reparse-symbol indented_block_body) [35960 36015])
                    ("rmtree" variable nil (reparse-symbol indented_block_body) [36019 36041])
                    ("rmtree_p" function (:arguments 
                      ( ("self" variable nil (reparse-symbol function_parameters) [36060 36064]))                      ) (reparse-symbol indented_block_body) [36047 36215])
                    ("if" code nil (reparse-symbol indented_block_body) [36259 36339])
                    ("if" code nil (reparse-symbol indented_block_body) [36344 36457]))                  
                :type "class")
                nil [2920 36457])
            ("tempdir" type
               (:superclasses ("path")
                :members 
                  ( (""""
    A temporary directory via tempfile.mkdtemp, and constructed with the
    same parameters that you can use as a context manager.

    Example:

        with tempdir() as d:
            # do stuff with the path object "d"

        # here the directory is deleted automatically
    """" code nil (reparse-symbol indented_block_body) [36483 36773])
                    ("ClassProperty" code nil (reparse-symbol indented_block_body) [36780 36793])
                    ("classmethod" code nil (reparse-symbol indented_block_body) [36799 36810])
                    ("_next_class" function (:arguments 
                      ( ("cls" variable nil (reparse-symbol function_parameters) [36831 36834]))                      ) (reparse-symbol indented_block_body) [36815 36857])
                    ("__new__" function (:arguments 
                      ( ("cls" variable nil (reparse-symbol function_parameters) [36874 36877])
                        ("args" variable nil (reparse-symbol function_parameters) [36879 36884])
                        ("kwargs" variable nil (reparse-symbol function_parameters) [36886 36894]))                      ) (reparse-symbol indented_block_body) [36862 37006])
                    ("__init__" function (:arguments 
                      ( ("self" variable nil (reparse-symbol function_parameters) [37024 37028])
                        ("args" variable nil (reparse-symbol function_parameters) [37030 37035])
                        ("kwargs" variable nil (reparse-symbol function_parameters) [37037 37045]))                      ) (reparse-symbol indented_block_body) [37011 37061])
                    ("__enter__" function (:arguments 
                      ( ("self" variable nil (reparse-symbol function_parameters) [37080 37084]))                      ) (reparse-symbol indented_block_body) [37066 37107])
                    ("__exit__" function (:arguments 
                      ( ("self" variable nil (reparse-symbol function_parameters) [37125 37129])
                        ("exc_type" variable nil (reparse-symbol function_parameters) [37131 37139])
                        ("exc_value" variable nil (reparse-symbol function_parameters) [37141 37150])
                        ("traceback" variable nil (reparse-symbol function_parameters) [37152 37161]))                      ) (reparse-symbol indented_block_body) [37112 37216]))                  
                :type "class")
                nil [36458 37216]))          
    :file "path.py"
    :pointmax 37216
    :fsize 37215
    :lastmodtime '(20841 16120)
    :unmatched-syntax '((punctuation 36798 . 36799) (punctuation 36779 . 36780) (INDENT_BLOCK 28298 . 28495) (NEWLINE 28297 . 28298) (COLON 28296 . 28297) (NAME 28271 . 28275) (NAME 28276 . 28280) (AS 28292 . 28294) (INDENT_BLOCK 27039 . 28061) (NEWLINE 27038 . 27039) (COLON 27037 . 27038) (NAME 27012 . 27016) (NAME 27017 . 27021) (AS 27033 . 27035) (INDENT_BLOCK 25257 . 25294) (NEWLINE 25256 . 25257) (COLON 25255 . 25256) (NAME 25231 . 25235) (NAME 25236 . 25240) (AS 25251 . 25253) (INDENT_BLOCK 20433 . 20462) (NEWLINE 20318 . 20319) (COLON 20317 . 20318) (NAME 20267 . 20271) (NAME 20272 . 20278) (AS 20313 . 20315) (INDENT_BLOCK 20187 . 20219) (NEWLINE 20186 . 20187) (COLON 20185 . 20186) (NAME 20161 . 20165) (NAME 20166 . 20170) (AS 20181 . 20183) (INDENT_BLOCK 19453 . 19480) (NEWLINE 19452 . 19453) (COLON 19451 . 19452) (NAME 19426 . 19430) (NAME 19431 . 19435) (AS 19447 . 19449) (INDENT_BLOCK 19061 . 19089) (NEWLINE 19060 . 19061) (COLON 19059 . 19060) (NAME 19034 . 19038) (NAME 19039 . 19043) (AS 19055 . 19057) (punctuation 9007 . 9008) (punctuation 8771 . 8772) (punctuation 4806 . 4807) (punctuation 3584 . 3585) (punctuation 3565 . 3566) (punctuation 3349 . 3350) (punctuation 3332 . 3333))
    )
   (semanticdb-table "awmstools.py"
    :major-mode 'python-mode
    :tags 
        '( (""""A collection of various convenience functions and classes, small utilities
   and 'fixes'.

   Some just save a little bit of typing (`Result`), others are things that
   seem to have been forgotten in the standard libraries (`slurp`,
   `binarySearch`, `replaceStrs`) or that have a strange behavior
   (`os.path.splitext`). Apart from several general purpose utilities for
   lists (`flatten`) iterables in general (`window`, `unique`, `union`,
   `group` etc.) there are also more special purpose utilities such as various
   handy functions and classes for writing scripts (`DryRun`), for debugging
   (`makePrintReturner`) and for meta-programming (`gensym`).


"""" code nil nil [1081 1754])
            ("__future__" include nil nil [1755 1786])
            ("__docformat__" variable nil nil [1787 1824])
            ("__revision__" variable nil nil [1825 1901])
            ("__version__" variable nil nil [1902 1922])
            ("__author__" variable nil nil [1923 1979])
            ("__test__" variable nil nil [1980 1993])
            ("bisect" include nil nil [2017 2030])
            ("codecs" include nil nil [2031 2044])
            ("copy" include nil nil [2045 2056])
            ("cPickle" include nil nil [2057 2071])
            ("lambda " code nil nil [2191 2232])
            ("itertools" include nil nil [2233 2256])
            ("inspect" include nil nil [2257 2271])
            ("itertools" include nil nil [2272 2288])
            ("math" include nil nil [2289 2300])
            ("operator" include nil nil [2301 2316])
            ("os" include nil nil [2317 2326])
            ("popen2" include nil nil [2327 2340])
            ("getpass" include nil nil [2341 2355])
            ("re" include nil nil [2356 2365])
            ("sets" include nil nil [2366 2377])
            ("sys" include nil nil [2378 2388])
            ("tempfile" include nil nil [2389 2404])
            ("time" include nil nil [2405 2416])
            ("types" include nil nil [2417 2429])
            ("urllib2" include nil nil [2430 2444])
            ("try" code nil nil [2445 2517])
            ("try" code nil nil [2518 2611])
            ("_uniqueClass" type
               (:superclasses ("object")
                :members 
                  ( (""""To create a single instance to be used for default values; supports
    comparison by-object identity to work around stupid classes that won't allow
    comparisons to non-self-instances."""" code nil (reparse-symbol indented_block_body) [2644 2837])
                    ("__eq__" function (:arguments 
                      ( ("a" variable nil (reparse-symbol function_parameters) [2853 2854])
                        ("b" variable nil (reparse-symbol function_parameters) [2855 2856]))                      ) (reparse-symbol indented_block_body) [2842 2874])
                    ("__ne__" function (:arguments 
                      ( ("a" variable nil (reparse-symbol function_parameters) [2889 2890])
                        ("b" variable nil (reparse-symbol function_parameters) [2891 2892]))                      ) (reparse-symbol indented_block_body) [2878 2913]))                  
                :type "class")
                nil [2612 2913])
            ("try" code nil nil [2913 3006])
            ("if" code nil nil [3008 3916])
            ("try" code nil nil [3944 4019])
            ("gensym" function (:arguments 
              ( ("prefix" variable nil (reparse-symbol function_parameters) [4030 4036]))              ) nil [4019 4279])
            ("__test__" variable nil nil [4280 4536])
            ("rexGroups" function (:arguments 
              ( ("rex" variable nil (reparse-symbol function_parameters) [4674 4677]))              ) nil [4660 4999])
            ("IndexMaker" type
               (:superclasses ("object")
                :members 
                  ( (""""Convinience class to make slices etc. that can be used for creating
    indices (mainly because using `slice` is a PITA).

    Examples:

    >>> range(4)[indexme[::-1]] == range(4)[::-1] == [3, 2, 1, 0]
    True
    >>> indexme[::-1]
    slice(None, None, -1)
    >>> indexme[0,:]
    (0, slice(None, None, None))
    """" code nil (reparse-symbol indented_block_body) [5031 5356])
                    ("__getitem__" function (:arguments 
                      ( ("self" variable nil (reparse-symbol function_parameters) [5377 5381])
                        ("a" variable nil (reparse-symbol function_parameters) [5383 5384]))                      ) (reparse-symbol indented_block_body) [5361 5404]))                  
                :type "class")
                nil [5001 5404])
            ("indexme" variable nil nil [5404 5426])
            ("INFI" variable nil nil [5577 5594])
            ("INF" variable nil nil [5611 5625])
            ("Result" type
               (:superclasses ("object")
                :members 
                  ( (""""Circumvent python's lack of assignment expression (mainly useful for
       writing while loops):

        >>> import re
        >>> s = 'one 2 three 4 five 6'
        >>> findNumber = Result(re.compile('\d+').search)
        >>> while findNumber(s):
        ...     match = findNumber.result
        ...     print 'found', `match.group(0)`, 'at position', match.start()
        ...     s = s[match.end():]
        ...
        found '2' at position 4
        found '4' at position 7
        found '6' at position 6
    """" code nil (reparse-symbol indented_block_body) [5654 6179])
                    ("__init__" function (:arguments 
                      ( ("self" variable nil (reparse-symbol function_parameters) [6197 6201])
                        ("func" variable nil (reparse-symbol function_parameters) [6203 6207]))                      ) (reparse-symbol indented_block_body) [6184 6235])
                    ("__call__" function (:arguments 
                      ( ("self" variable nil (reparse-symbol function_parameters) [6252 6256])
                        ("args" variable nil (reparse-symbol function_parameters) [6257 6262])
                        ("kwargs" variable nil (reparse-symbol function_parameters) [6263 6271]))                      ) (reparse-symbol indented_block_body) [6239 6349]))                  
                :type "class")
                nil [5628 6349])
            ("NullType" type
               (:superclasses ("object")
                :members 
                  ( ("r"""Similar to `NoneType` with a corresponding singleton instance `Null`
that, unlike `None` accepts any message and returns itself.

Examples:
>>> Null("send", a="message")(*"and one more")[
...      "even index and"].what.you.get.still is Null
True
>>> not Null
True
>>> Null['something']
Null
>>> Null.something
Null
>>> Null in Null
False
>>> hasattr(Null, 'something')
True
>>> Null.something = "a value"
>>> Null.something
Null
>>> Null == Null
True
>>> Null == 3
False
"""" code nil (reparse-symbol indented_block_body) [6378 6857])
                    ("__new__" function (:arguments 
                      ( ("cls" variable nil (reparse-symbol function_parameters) [6875 6878]))                      ) (reparse-symbol indented_block_body) [6863 6912])
                    ("__call__" function (:arguments 
                      ( ("self" variable nil (reparse-symbol function_parameters) [6929 6933])
                        ("args" variable nil (reparse-symbol function_parameters) [6935 6940])
                        ("kwargs" variable nil (reparse-symbol function_parameters) [6942 6950]))                      ) (reparse-symbol indented_block_body) [6916 6965])
                    ("__getinitargs__" function (:arguments 
                      ( ("self" variable nil (reparse-symbol function_parameters) [7044 7048]))                      ) (reparse-symbol indented_block_body) [7024 7110])
                    ("__getattr__" function (:arguments 
                      ( ("self" variable nil (reparse-symbol function_parameters) [7130 7134])
                        ("attr" variable nil (reparse-symbol function_parameters) [7136 7140]))                      ) (reparse-symbol indented_block_body) [7114 7163])
                    ("__getitem__" function (:arguments 
                      ( ("self" variable nil (reparse-symbol function_parameters) [7183 7187])
                        ("item" variable nil (reparse-symbol function_parameters) [7189 7193]))                      ) (reparse-symbol indented_block_body) [7167 7216])
                    ("__setattr__" function (:arguments 
                      ( ("self" variable nil (reparse-symbol function_parameters) [7236 7240])
                        ("attr" variable nil (reparse-symbol function_parameters) [7242 7246])
                        ("value" variable nil (reparse-symbol function_parameters) [7248 7253]))                      ) (reparse-symbol indented_block_body) [7220 7262])
                    ("__setitem__" function (:arguments 
                      ( ("self" variable nil (reparse-symbol function_parameters) [7282 7286])
                        ("item" variable nil (reparse-symbol function_parameters) [7288 7292])
                        ("value" variable nil (reparse-symbol function_parameters) [7294 7299]))                      ) (reparse-symbol indented_block_body) [7266 7308])
                    ("__len__" function (:arguments 
                      ( ("self" variable nil (reparse-symbol function_parameters) [7324 7328]))                      ) (reparse-symbol indented_block_body) [7312 7358])
                    ("__iter__" function (:arguments 
                      ( ("self" variable nil (reparse-symbol function_parameters) [7375 7379]))                      ) (reparse-symbol indented_block_body) [7362 7415])
                    ("__contains__" function (:arguments 
                      ( ("self" variable nil (reparse-symbol function_parameters) [7436 7440])
                        ("item" variable nil (reparse-symbol function_parameters) [7442 7446]))                      ) (reparse-symbol indented_block_body) [7419 7469])
                    ("__repr__" function (:arguments 
                      ( ("self" variable nil (reparse-symbol function_parameters) [7486 7490]))                      ) (reparse-symbol indented_block_body) [7473 7524]))                  
                :type "class")
                nil [6350 7524])
            ("Null" variable nil nil [7524 7555])
            ("div" function (:arguments 
              ( ("a" variable nil (reparse-symbol function_parameters) [7566 7567])
                ("b" variable nil (reparse-symbol function_parameters) [7568 7569]))              ) nil [7558 7939])
            ("ipshuffle" function (:arguments 
              ( ("l" variable nil (reparse-symbol function_parameters) [7955 7956])
                ("random" variable nil (reparse-symbol function_parameters) [7958 7964]))              ) nil [7941 8096])
            ("__test__" variable nil nil [8097 8273])
            ("shuffle" function (:arguments 
              ( ("seq" variable nil (reparse-symbol function_parameters) [8288 8291])
                ("random" variable nil (reparse-symbol function_parameters) [8293 8299]))              ) nil [8276 8601])
            ("__test__" variable nil nil [8602 8756])
            ("_normalizeToFile" function (:arguments 
              ( ("maybeFile" variable nil (reparse-symbol function_parameters) [8946 8955])
                ("mode" variable nil (reparse-symbol function_parameters) [8957 8961])
                ("expand" variable nil (reparse-symbol function_parameters) [8963 8969]))              ) nil [8925 9378])
            ("slurp" function (:arguments 
              ( ("file" variable nil (reparse-symbol function_parameters) [9390 9394])
                ("binary" variable nil (reparse-symbol function_parameters) [9396 9402])
                ("expand" variable nil (reparse-symbol function_parameters) [9410 9416]))              ) nil [9380 9794])
            ("withFile" function (:arguments 
              ( ("file" variable nil (reparse-symbol function_parameters) [9848 9852])
                ("func" variable nil (reparse-symbol function_parameters) [9854 9858])
                ("mode" variable nil (reparse-symbol function_parameters) [9860 9864])
                ("expand" variable nil (reparse-symbol function_parameters) [9870 9876]))              ) nil [9835 10193])
            ("slurpLines" function (:arguments 
              ( ("file" variable nil (reparse-symbol function_parameters) [10210 10214])
                ("expand" variable nil (reparse-symbol function_parameters) [10216 10222]))              ) nil [10195 10463])
            ("slurpChompedLines" function (:arguments 
              ( ("file" variable nil (reparse-symbol function_parameters) [10486 10490])
                ("expand" variable nil (reparse-symbol function_parameters) [10492 10498]))              ) nil [10464 10678])
            ("strToTempfile" function (:arguments 
              ( ("s" variable nil (reparse-symbol function_parameters) [10697 10698])
                ("suffix" variable nil (reparse-symbol function_parameters) [10700 10706])
                ("prefix" variable nil (reparse-symbol function_parameters) [10713 10719])
                ("dir" variable nil (reparse-symbol function_parameters) [10726 10729])
                ("binary" variable nil (reparse-symbol function_parameters) [10736 10742]))              ) nil [10679 11162])
            ("spitOut" function (:arguments 
              ( ("s" variable nil (reparse-symbol function_parameters) [11176 11177])
                ("file" variable nil (reparse-symbol function_parameters) [11179 11183])
                ("binary" variable nil (reparse-symbol function_parameters) [11185 11191])
                ("expand" variable nil (reparse-symbol function_parameters) [11199 11205]))              ) nil [11164 11476])
            ("spitOutLines" function (:arguments 
              ( ("lines" variable nil (reparse-symbol function_parameters) [11494 11499])
                ("file" variable nil (reparse-symbol function_parameters) [11501 11505])
                ("expand" variable nil (reparse-symbol function_parameters) [11507 11513]))              ) nil [11477 11744])
            ("readProcess" function (:arguments 
              ( ("cmd" variable nil (reparse-symbol function_parameters) [11814 11817])
                ("args" variable nil (reparse-symbol function_parameters) [11819 11824]))              ) nil [11798 13206])
            ("silentlyRunProcess" function (:arguments 
              ( ("cmd" variable nil (reparse-symbol function_parameters) [13231 13234])
                ("args" variable nil (reparse-symbol function_parameters) [13235 13240]))              ) nil [13208 13386])
            ("runProcess" function (:arguments 
              ( ("cmd" variable nil (reparse-symbol function_parameters) [13402 13405])
                ("args" variable nil (reparse-symbol function_parameters) [13407 13412]))              ) nil [13387 13944])
            ("isSeq" function (:arguments 
              ( ("obj" variable nil (reparse-symbol function_parameters) [13993 13996]))              ) nil [13983 14242])
            ("splitext" function (:arguments 
              ( ("p" variable nil (reparse-symbol function_parameters) [14328 14329]))              ) nil [14315 14680])
            ("bipart" function (:arguments 
              ( ("func" variable nil (reparse-symbol function_parameters) [14717 14721])
                ("seq" variable nil (reparse-symbol function_parameters) [14723 14726]))              ) nil [14706 15078])
            ("unzip" function (:arguments 
              ( ("seq" variable nil (reparse-symbol function_parameters) [15090 15093]))              ) nil [15080 15247])
            ("binarySearchPos" function (:arguments 
              ( ("seq" variable nil (reparse-symbol function_parameters) [15268 15271])
                ("item" variable nil (reparse-symbol function_parameters) [15273 15277])
                ("cmpfunc" variable nil (reparse-symbol function_parameters) [15279 15286]))              ) nil [15248 16016])
            ("__test__" variable nil nil [16017 16350])
            ("binarySearchItem" function (:arguments 
              ( ("seq" variable nil (reparse-symbol function_parameters) [16374 16377])
                ("item" variable nil (reparse-symbol function_parameters) [16379 16383])
                ("cmpfunc" variable nil (reparse-symbol function_parameters) [16385 16392]))              ) nil [16353 16821])
            ("rotate" function (:arguments 
              ( ("l" variable nil (reparse-symbol function_parameters) [16881 16882])
                ("steps" variable nil (reparse-symbol function_parameters) [16884 16889]))              ) nil [16870 17348])
            ("iprotate" function (:arguments 
              ( ("l" variable nil (reparse-symbol function_parameters) [17362 17363])
                ("steps" variable nil (reparse-symbol function_parameters) [17365 17370]))              ) nil [17349 17724])
            ("unique" function (:arguments 
              ( ("iterable" variable nil (reparse-symbol function_parameters) [17905 17913]))              ) nil [17894 18114])
            ("__test__" variable nil nil [18115 18347])
            ("notUnique" function (:arguments 
              ( ("iterable" variable nil (reparse-symbol function_parameters) [18363 18371])
                ("reportMax" variable nil (reparse-symbol function_parameters) [18373 18382]))              ) nil [18349 18950])
            ("__test__" variable nil nil [18950 19275])
            ("unweave" function (:arguments 
              ( ("iterable" variable nil (reparse-symbol function_parameters) [19291 19299])
                ("n" variable nil (reparse-symbol function_parameters) [19301 19302]))              ) nil [19279 19606])
            ("weave" function (:arguments 
              ( ("iterables" variable nil (reparse-symbol function_parameters) [19620 19630]))              ) nil [19610 20244])
            ("atIndices" function (:arguments 
              ( ("indexable" variable nil (reparse-symbol function_parameters) [20259 20268])
                ("indices" variable nil (reparse-symbol function_parameters) [20270 20277])
                ("default" variable nil (reparse-symbol function_parameters) [20279 20286]))              ) nil [20245 20849])
            ("__test__" variable nil nil [20850 21158])
            ("window" function (:arguments 
              ( ("iterable" variable nil (reparse-symbol function_parameters) [21313 21321])
                ("n" variable nil (reparse-symbol function_parameters) [21323 21324])
                ("s" variable nil (reparse-symbol function_parameters) [21328 21329]))              ) nil [21302 21895])
            ("xwindow" variable nil nil [21902 21918])
            ("group" function (:arguments 
              ( ("iterable" variable nil (reparse-symbol function_parameters) [21954 21962])
                ("n" variable nil (reparse-symbol function_parameters) [21964 21965])
                ("pad" variable nil (reparse-symbol function_parameters) [21969 21972]))              ) nil [21944 22838])
            ("iterate" function (:arguments 
              ( ("f" variable nil (reparse-symbol function_parameters) [22851 22852])
                ("n" variable nil (reparse-symbol function_parameters) [22854 22855])
                ("last" variable nil (reparse-symbol function_parameters) [22862 22866]))              ) nil [22839 23373])
            ("dropwhilenot" function (:arguments 
              ( ("func" variable nil (reparse-symbol function_parameters) [23392 23396])
                ("iterable" variable nil (reparse-symbol function_parameters) [23398 23406]))              ) nil [23375 23651])
            ("stretch" function (:arguments 
              ( ("iterable" variable nil (reparse-symbol function_parameters) [23665 23673])
                ("n" variable nil (reparse-symbol function_parameters) [23675 23676]))              ) nil [23653 23894])
            ("splitAt" function (:arguments 
              ( ("iterable" variable nil (reparse-symbol function_parameters) [23908 23916])
                ("indices" variable nil (reparse-symbol function_parameters) [23918 23925]))              ) nil [23896 24538])
            ("__test__" variable nil nil [24540 24901])
            ("update" function (:arguments 
              ( ("d" variable nil (reparse-symbol function_parameters) [25057 25058])
                ("e" variable nil (reparse-symbol function_parameters) [25060 25061]))              ) nil [25046 25179])
            ("invertDict" function (:arguments 
              ( ("d" variable nil (reparse-symbol function_parameters) [25195 25196])
                ("allowManyToOne" variable nil (reparse-symbol function_parameters) [25198 25212]))              ) nil [25180 25963])
            ("iflatten" function (:arguments 
              ( ("seq" variable nil (reparse-symbol function_parameters) [26021 26024])
                ("isSeq" variable nil (reparse-symbol function_parameters) [26026 26031]))              ) nil [26008 26222])
            ("__test__" variable nil nil [26223 26477])
            ("flatten" function (:arguments 
              ( ("seq" variable nil (reparse-symbol function_parameters) [26491 26494])
                ("isSeq" variable nil (reparse-symbol function_parameters) [26496 26501]))              ) nil [26479 27377])
            ("countIf" function (:arguments 
              ( ("predicate" variable nil (reparse-symbol function_parameters) [27391 27400])
                ("iterable" variable nil (reparse-symbol function_parameters) [27402 27410]))              ) nil [27379 27538])
            ("__test__" variable nil nil [27539 27631])
            ("positionIf" function (:arguments 
              ( ("pred" variable nil (reparse-symbol function_parameters) [27648 27652])
                ("seq" variable nil (reparse-symbol function_parameters) [27654 27657]))              ) nil [27633 27815])
            ("union" function (:arguments 
              ( ("seq1" variable nil (reparse-symbol function_parameters) [27828 27832])
                ("seqs" variable nil (reparse-symbol function_parameters) [27837 27842]))              ) nil [27818 28320])
            ("isSet" function (:arguments 
              ( ("obj" variable nil (reparse-symbol function_parameters) [28398 28401]))              ) nil [28388 28493])
            ("without" function (:arguments 
              ( ("seq1" variable nil (reparse-symbol function_parameters) [28509 28513])
                ("seq2" variable nil (reparse-symbol function_parameters) [28515 28519]))              ) nil [28497 28791])
            ("findIf" function (:arguments 
              ( ("predicate" variable nil (reparse-symbol function_parameters) [28804 28813])
                ("iterable" variable nil (reparse-symbol function_parameters) [28815 28823]))              ) nil [28793 29042])
            ("some" function (:arguments 
              ( ("predicate" variable nil (reparse-symbol function_parameters) [29054 29063])
                ("seqs" variable nil (reparse-symbol function_parameters) [29065 29070]))              ) nil [29045 29509])
            ("every" function (:arguments 
              ( ("predicate" variable nil (reparse-symbol function_parameters) [29520 29529])
                ("iterables" variable nil (reparse-symbol function_parameters) [29531 29541]))              ) nil [29510 30121])
            ("nTimes" function (:arguments 
              ( ("n" variable nil (reparse-symbol function_parameters) [30222 30223])
                ("f" variable nil (reparse-symbol function_parameters) [30225 30226])
                ("args" variable nil (reparse-symbol function_parameters) [30228 30233])
                ("kwargs" variable nil (reparse-symbol function_parameters) [30235 30243]))              ) nil [30211 30483])
            ("timeCall" function (:arguments 
              ( ("funcAndArgs" variable nil (reparse-symbol function_parameters) [30498 30510])
                ("kwargs" variable nil (reparse-symbol function_parameters) [30512 30520]))              ) nil [30485 30914])
            ("__test__" variable nil nil [30915 30985])
            ("isString" function (:arguments 
              ( ("obj" variable nil (reparse-symbol function_parameters) [31024 31027]))              ) nil [31011 31158])
            ("chomp" variable nil nil [31159 31203])
            ("chomp" variable nil nil [31204 31269])
            ("__test__" variable nil nil [31270 31386])
            ("chompLines" function (:arguments 
              ( ("lines" variable nil (reparse-symbol function_parameters) [31403 31408]))              ) nil [31388 31514])
            ("__test__" variable nil nil [31642 31814])
            ("replaceStrs" function (:arguments 
              ( ("s" variable nil (reparse-symbol function_parameters) [31832 31833])
                ("args" variable nil (reparse-symbol function_parameters) [31835 31840]))              ) nil [31816 32281])
            ("escape" function (:arguments 
              ( ("s" variable nil (reparse-symbol function_parameters) [32293 32294]))              ) nil [32282 32696])
            ("escapeAscii" function (:arguments 
              ( ("s" variable nil (reparse-symbol function_parameters) [32712 32713]))              ) nil [32696 32774])
            ("escapeUnicode" function (:arguments 
              ( ("s" variable nil (reparse-symbol function_parameters) [32792 32793]))              ) nil [32774 32855])
            ("unescape" function (:arguments 
              ( ("s" variable nil (reparse-symbol function_parameters) [32868 32869]))              ) nil [32855 33185])
            ("unescapeAscii" function (:arguments 
              ( ("s" variable nil (reparse-symbol function_parameters) [33203 33204]))              ) nil [33185 33265])
            ("unescapeUnicode" function (:arguments 
              ( ("s" variable nil (reparse-symbol function_parameters) [33285 33286]))              ) nil [33265 33348])
            ("lineAndColumnAt" function (:arguments 
              ( ("s" variable nil (reparse-symbol function_parameters) [33371 33372])
                ("pos" variable nil (reparse-symbol function_parameters) [33374 33377]))              ) nil [33351 33911])
            ("prin" function (:arguments 
              ( ("args" variable nil (reparse-symbol function_parameters) [33952 33957])
                ("kwargs" variable nil (reparse-symbol function_parameters) [33959 33967]))              ) nil [33943 34228])
            ("__test__" variable nil nil [34228 34286])
            ("underline" function (:arguments 
              ( ("s" variable nil (reparse-symbol function_parameters) [34303 34304])
                ("lineC" variable nil (reparse-symbol function_parameters) [34306 34311]))              ) nil [34289 34567])
            ("fitString" function (:arguments 
              ( ("s" variable nil (reparse-symbol function_parameters) [34582 34583])
                ("maxCol" variable nil (reparse-symbol function_parameters) [34585 34591])
                ("newlineReplacement" variable nil (reparse-symbol function_parameters) [34596 34614]))              ) nil [34568 35410])
            ("magicGlobals" function (:arguments 
              ( ("level" variable nil (reparse-symbol function_parameters) [35445 35450]))              ) nil [35428 35628])
            ("magicLocals" function (:arguments 
              ( ("level" variable nil (reparse-symbol function_parameters) [35645 35650]))              ) nil [35629 35832])
            ("thisModule" function nil nil [35833 35914])
            ("__saveVarsHelper" function (:arguments 
              ( ("filename" variable nil (reparse-symbol function_parameters) [35953 35961])
                ("varNamesStr" variable nil (reparse-symbol function_parameters) [35963 35974])
                ("outOf" variable nil (reparse-symbol function_parameters) [35976 35981])
                ("extension" variable nil (reparse-symbol function_parameters) [35982 35991])
                ("opts" variable nil (reparse-symbol function_parameters) [36003 36009]))              ) nil [35932 36448])
            ("saveVars" function (:arguments 
              ( ("filename" variable nil (reparse-symbol function_parameters) [36462 36470])
                ("varNamesStr" variable nil (reparse-symbol function_parameters) [36472 36483])
                ("outOf" variable nil (reparse-symbol function_parameters) [36485 36490])
                ("opts" variable nil (reparse-symbol function_parameters) [36497 36503]))              ) nil [36449 37387])
            ("saveDict" function (:arguments 
              ( ("filename" variable nil (reparse-symbol function_parameters) [37418 37426])
                ("d" variable nil (reparse-symbol function_parameters) [37428 37429])
                ("kwargs" variable nil (reparse-symbol function_parameters) [37431 37439]))              ) nil [37405 37504])
            ("addVars" function (:arguments 
              ( ("filename" variable nil (reparse-symbol function_parameters) [37518 37526])
                ("varNamesStr" variable nil (reparse-symbol function_parameters) [37528 37539])
                ("outOf" variable nil (reparse-symbol function_parameters) [37541 37546]))              ) nil [37506 37974])
            ("loadDict" function (:arguments 
              ( ("filename" variable nil (reparse-symbol function_parameters) [37988 37996]))              ) nil [37975 38333])
            ("loadVars" function (:arguments 
              ( ("filename" variable nil (reparse-symbol function_parameters) [38347 38355])
                ("ask" variable nil (reparse-symbol function_parameters) [38357 38360])
                ("into" variable nil (reparse-symbol function_parameters) [38367 38371])
                ("only" variable nil (reparse-symbol function_parameters) [38378 38382]))              ) nil [38334 39403])
            ("runInfo" function (:arguments 
              ( ("prog" variable nil (reparse-symbol function_parameters) [39435 39439])
                ("vers" variable nil (reparse-symbol function_parameters) [39445 39449])
                ("date" variable nil (reparse-symbol function_parameters) [39455 39459])
                ("user" variable nil (reparse-symbol function_parameters) [39465 39469])
                ("dir" variable nil (reparse-symbol function_parameters) [39475 39478])
                ("args" variable nil (reparse-symbol function_parameters) [39484 39488]))              ) nil [39423 40186])
            ("DryRun" type
               (:members 
                  ( (""""A little class that is usefull for debugging and testing and for
programs that should have a "dry run" option.


Examples:

    >>> import sys
    >>> from os import system
    >>> dry = True
    >>> # that's how you can switch the programms behaviour between dry run
    >>>
    >>> if dry:
    ...     # (`out` defaults to stdout, but we need it here for doctest)
    ...     run = DryRun(dry=True, out=sys.stdout)
    ... else:
    ...     run = DryRun(dry=False, out=sys.stdout)
    ...
    >>> ## IGNORE 2 hacks to get doctest working, please ignore
    >>> def system(x): print "hallo"
    ...
    >>> run.__repr__ = lambda : "<awmstools.DryRun instance at 0x8222d6c>"
    >>> ## UNIGNORE
    >>> run(system, 'echo "hallo"')
    system('echo "hallo"')
    >>> # now let's get serious
    >>> run.dry = False
    >>> run(system, 'echo "hallo"')
    hallo
    >>> # just show what command would be run again
    >>> run.dry = True
    >>> # You can also specify how the output for a certain function should be
    ... # look like, e.g. if you just want to print the command for all system
    ... # calls, do the following:
    >>> run.addFormatter(system, lambda x,*args, **kwargs: args[0])
    <awmstools.DryRun instance at 0x8222d6c>
    >>> run(system, 'echo "hallo"')
    echo "hallo"
    >>> # Other functions will still be formated with run.defaultFormatter, which
    ... # gives the following results
    >>> run(int, "010101", 2)
    int('010101', 2)
    >>> # Switch to wet run again:
    >>> run.dry = False
    >>> run(int, "010101", 2)
    21
    >>>

Caveats:

    - remember that arguments might look different from what you specified in
      the source-code, e.g::

            >>> run.dry = True
            >>> run(chr, 0x50)
            chr(80)
            >>>

    - 'DryRun(showModule=True)' will try to print the module name where func
       was defined, this might however *not* produce the results you
       expected. For example, a function might be defined in another module
       than the one from which you imported it:

            >>> run = DryRun(dry=True, showModule=True)
            >>> run(os.path.join, "path", "file")
            posixpath.join('path', 'file')
            >>>

see `DryRun.__init__` for more details."""" code nil (reparse-symbol indented_block_body) [40208 42477])
                    ("__init__" function (:arguments 
                      ( ("self" variable nil (reparse-symbol function_parameters) [42496 42500])
                        ("dry" variable nil (reparse-symbol function_parameters) [42502 42505])
                        ("out" variable nil (reparse-symbol function_parameters) [42512 42515])
                        ("showModule" variable nil (reparse-symbol function_parameters) [42522 42532]))                      ) (reparse-symbol indented_block_body) [42483 43505])
                    ("__call__" function (:arguments 
                      ( ("self" variable nil (reparse-symbol function_parameters) [43522 43526])
                        ("func" variable nil (reparse-symbol function_parameters) [43528 43532])
                        ("args" variable nil (reparse-symbol function_parameters) [43534 43539])
                        ("kwargs" variable nil (reparse-symbol function_parameters) [43541 43549]))                      ) (reparse-symbol indented_block_body) [43509 43635])
                    ("run" function (:arguments 
                      ( ("self" variable nil (reparse-symbol function_parameters) [43647 43651])
                        ("func" variable nil (reparse-symbol function_parameters) [43653 43657])
                        ("args" variable nil (reparse-symbol function_parameters) [43659 43664])
                        ("kwargs" variable nil (reparse-symbol function_parameters) [43666 43674]))                      ) (reparse-symbol indented_block_body) [43639 43905])
                    ("addFormatter" function (:arguments 
                      ( ("self" variable nil (reparse-symbol function_parameters) [43926 43930])
                        ("func" variable nil (reparse-symbol function_parameters) [43932 43936])
                        ("formatter" variable nil (reparse-symbol function_parameters) [43938 43947]))                      ) (reparse-symbol indented_block_body) [43909 44199])
                    ("dryRun" function (:arguments 
                      ( ("self" variable nil (reparse-symbol function_parameters) [44214 44218])
                        ("func" variable nil (reparse-symbol function_parameters) [44220 44224])
                        ("args" variable nil (reparse-symbol function_parameters) [44226 44231])
                        ("kwargs" variable nil (reparse-symbol function_parameters) [44233 44241]))                      ) (reparse-symbol indented_block_body) [44203 44479])
                    ("wetRun" function (:arguments 
                      ( ("self" variable nil (reparse-symbol function_parameters) [44494 44498])
                        ("func" variable nil (reparse-symbol function_parameters) [44500 44504])
                        ("args" variable nil (reparse-symbol function_parameters) [44506 44511])
                        ("kwargs" variable nil (reparse-symbol function_parameters) [44513 44521]))                      ) (reparse-symbol indented_block_body) [44483 44621]))                  
                :type "class")
                nil [40190 44621])
            ("makePrintReturner" function (:arguments 
              ( ("pre" variable nil (reparse-symbol function_parameters) [44686 44689])
                ("post" variable nil (reparse-symbol function_parameters) [44694 44698])
                ("out" variable nil (reparse-symbol function_parameters) [44703 44706]))              ) nil [44664 45246])
            ("ShowWrap" type
               (:superclasses ("object")
                :members 
                  ( (""""A simple way to trace modules or objects
    Example::

    >> import os
    >> os = ShowWrap(os, '->')
    >> os.getenv('SOME_STRANGE_NAME', 'NOT_FOUND')
    -> os.getenv('SOME_STRANGE_NAME','NOT_FOUND')
    'NOT_FOUND'
    """" code nil (reparse-symbol indented_block_body) [45535 45766])
                    ("__init__" function (:arguments 
                      ( ("self" variable nil (reparse-symbol function_parameters) [45784 45788])
                        ("module" variable nil (reparse-symbol function_parameters) [45789 45795])
                        ("prefix" variable nil (reparse-symbol function_parameters) [45797 45803]))                      ) (reparse-symbol indented_block_body) [45771 45866])
                    ("__getattribute__" function (:arguments 
                      ( ("self" variable nil (reparse-symbol function_parameters) [45891 45895])
                        ("name" variable nil (reparse-symbol function_parameters) [45897 45901]))                      ) (reparse-symbol indented_block_body) [45870 46467]))                  
                :type "class")
                nil [45507 46467])
            ("asVerboseContainer" function (:arguments 
              ( ("cont" variable nil (reparse-symbol function_parameters) [46563 46567])
                ("onGet" variable nil (reparse-symbol function_parameters) [46569 46574])
                ("onSet" variable nil (reparse-symbol function_parameters) [46581 46586])
                ("onDel" variable nil (reparse-symbol function_parameters) [46593 46598]))              ) nil [46540 47981])
            ("ezstruct" type
               (:superclasses ("object")
                :members 
                  ( ("r"""
    Examples:

        >>> brian = ezstruct(name="Brian", age=30)
        >>> brian.name
        'Brian'
        >>> brian.age
        30
        >>> brian.life = "short"
        >>> brian
        ezstruct(age=30, life='short', name='Brian')
        >>> del brian.life
        >>> brian == ezstruct(name="Brian", age=30)
        True
        >>> brian != ezstruct(name="Jesus", age=30)
        True
        >>> len(brian)
        2

    Call the object to create a clone:

        >>> brian() is not brian and brian(name="Jesus") == ezstruct(name="Jesus", age=30)
        True

    Conversion to/from dict:

        >>> ezstruct(**dict(brian)) == brian
        True

    Evil Stuff:

        >>> brian['name', 'age']
        ('Brian', 30)
        >>> brian['name', 'age'] = 'BRIAN', 'XXX'
        >>> brian
        ezstruct(age='XXX', name='BRIAN')
    """" code nil (reparse-symbol indented_block_body) [48086 48947])
                    ("__init__" function (:arguments 
                      ( ("self" variable nil (reparse-symbol function_parameters) [48965 48969])
                        ("kwargs" variable nil (reparse-symbol function_parameters) [48970 48978]))                      ) (reparse-symbol indented_block_body) [48952 49018])
                    ("__call__" function (:arguments 
                      ( ("self" variable nil (reparse-symbol function_parameters) [49035 49039])
                        ("kwargs" variable nil (reparse-symbol function_parameters) [49041 49049]))                      ) (reparse-symbol indented_block_body) [49022 49152])
                    ("__eq__" function (:arguments 
                      ( ("self" variable nil (reparse-symbol function_parameters) [49167 49171])
                        ("other" variable nil (reparse-symbol function_parameters) [49173 49178]))                      ) (reparse-symbol indented_block_body) [49156 49228])
                    ("__ne__" function (:arguments 
                      ( ("self" variable nil (reparse-symbol function_parameters) [49243 49247])
                        ("other" variable nil (reparse-symbol function_parameters) [49249 49254]))                      ) (reparse-symbol indented_block_body) [49232 49295])
                    ("__len__" function (:arguments 
                      ( ("self" variable nil (reparse-symbol function_parameters) [49311 49315]))                      ) (reparse-symbol indented_block_body) [49299 49444])
                    ("__getitem__" function (:arguments 
                      ( ("self" variable nil (reparse-symbol function_parameters) [49492 49496])
                        ("nameOrNames" variable nil (reparse-symbol function_parameters) [49498 49509]))                      ) (reparse-symbol indented_block_body) [49476 49672])
                    ("__setitem__" function (:arguments 
                      ( ("self" variable nil (reparse-symbol function_parameters) [49720 49724])
                        ("nameOrNames" variable nil (reparse-symbol function_parameters) [49726 49737])
                        ("valueOrValues" variable nil (reparse-symbol function_parameters) [49739 49752]))                      ) (reparse-symbol indented_block_body) [49704 49953])
                    ("__contains__" function (:arguments 
                      ( ("self" variable nil (reparse-symbol function_parameters) [49974 49978])
                        ("key" variable nil (reparse-symbol function_parameters) [49980 49983]))                      ) (reparse-symbol indented_block_body) [49957 50075])
                    ("__iter__" function (:arguments 
                      ( ("self" variable nil (reparse-symbol function_parameters) [50092 50096]))                      ) (reparse-symbol indented_block_body) [50079 50234])
                    ("__repr__" function (:arguments 
                      ( ("self" variable nil (reparse-symbol function_parameters) [50251 50255]))                      ) (reparse-symbol indented_block_body) [50238 50300]))                  
                :type "class")
                nil [48058 50300])
            ("mkRepr" function (:arguments 
              ( ("instance" variable nil (reparse-symbol function_parameters) [50475 50483])
                ("argls" variable nil (reparse-symbol function_parameters) [50485 50491])
                ("kwargs" variable nil (reparse-symbol function_parameters) [50493 50501]))              ) nil [50464 52146])
            ("__test__" variable nil nil [52147 52676])
            ("d2attrs" function (:arguments 
              ( ("args" variable nil (reparse-symbol function_parameters) [52709 52714])
                ("kwargs" variable nil (reparse-symbol function_parameters) [52716 52724]))              ) nil [52697 53895])
            ("ipairwise" function (:arguments 
              ( ("fun" variable nil (reparse-symbol function_parameters) [53910 53913])
                ("v" variable nil (reparse-symbol function_parameters) [53915 53916]))              ) nil [53896 53964])
            ("pairwise" function (:arguments 
              ( ("fun" variable nil (reparse-symbol function_parameters) [53978 53981])
                ("v" variable nil (reparse-symbol function_parameters) [53983 53984]))              ) nil [53965 54290])
            ("ignoreErrors" function (:arguments 
              ( ("func" variable nil (reparse-symbol function_parameters) [54310 54314])
                ("args" variable nil (reparse-symbol function_parameters) [54316 54321])
                ("kwargs" variable nil (reparse-symbol function_parameters) [54323 54331]))              ) nil [54293 54498])
            ("argmax" function (:arguments 
              ( ("iterable" variable nil (reparse-symbol function_parameters) [54512 54520])
                ("key" variable nil (reparse-symbol function_parameters) [54522 54525])
                ("both" variable nil (reparse-symbol function_parameters) [54532 54536]))              ) nil [54501 54894])
            ("argmin" function (:arguments 
              ( ("iterable" variable nil (reparse-symbol function_parameters) [54906 54914])
                ("key" variable nil (reparse-symbol function_parameters) [54916 54919])
                ("both" variable nil (reparse-symbol function_parameters) [54926 54930]))              ) nil [54895 55174])
            ("isInt" function (:arguments 
              ( ("num" variable nil (reparse-symbol function_parameters) [55271 55274]))              ) nil [55261 55724])
            ("ordinalStr" function (:arguments 
              ( ("num" variable nil (reparse-symbol function_parameters) [55740 55743]))              ) nil [55725 55971])
            ("mapConcat" function (:arguments 
              ( ("func" variable nil (reparse-symbol function_parameters) [56116 56120])
                ("iterables" variable nil (reparse-symbol function_parameters) [56122 56132]))              ) nil [56102 56546])
            ("unfold" function (:arguments 
              ( ("seed" variable nil (reparse-symbol function_parameters) [56562 56566])
                ("by" variable nil (reparse-symbol function_parameters) [56568 56570])
                ("last" variable nil (reparse-symbol function_parameters) [56572 56576]))              ) nil [56551 57039])
            ("reduceR" function (:arguments 
              ( ("f" variable nil (reparse-symbol function_parameters) [57052 57053])
                ("sequence" variable nil (reparse-symbol function_parameters) [57055 57063])
                ("initial" variable nil (reparse-symbol function_parameters) [57065 57072]))              ) nil [57040 57524])
            ("compose" function (:arguments 
              ( ("funcs" variable nil (reparse-symbol function_parameters) [57560 57566]))              ) nil [57548 58312])
            ("romanNumeral" function (:arguments 
              ( ("n" variable nil (reparse-symbol function_parameters) [58331 58332]))              ) nil [58314 58845])
            ("_docTest" function nil nil [58849 58933])
            ("first" function (:arguments 
              ( ("n" variable nil (reparse-symbol function_parameters) [58944 58945])
                ("it" variable nil (reparse-symbol function_parameters) [58947 58949])
                ("constructor" variable nil (reparse-symbol function_parameters) [58951 58962]))              ) nil [58934 59230])
            ("drop" function (:arguments 
              ( ("n" variable nil (reparse-symbol function_parameters) [59239 59240])
                ("it" variable nil (reparse-symbol function_parameters) [59242 59244])
                ("constructor" variable nil (reparse-symbol function_parameters) [59246 59257]))              ) nil [59230 59429])
            ("if" code nil nil [59430 60312])
            ("__all__" variable nil nil [60374 60386])
            ("me" variable nil nil [60387 60413])
            ("for" code nil nil [60414 60518])
            ("del" code nil nil [60518 60527]))          
    :file "awmstools.py"
    :pointmax 60529
    :fsize 60530
    :lastmodtime '(18889 1246)
    :unmatched-syntax '((NAME 47430 . 47434) (PAREN_BLOCK 47434 . 47440) (COLON 2189 . 2190) (EXPONENT 2181 . 2183) (TRY 2072 . 2075) (MULT 2175 . 2176))
    )
   )
  :file "!drive_c!Python26!Lib!site-packages!semantic.cache"
  :semantic-tag-version "2.0"
  :semanticdb-version "2.0"
  )
